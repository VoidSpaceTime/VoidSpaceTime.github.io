const e=JSON.parse('{"key":"v-0ac52e77","path":"/zh/posts/C_/%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99.html","title":"开闭原则","lang":"zh-CN","frontmatter":{"lang":"zh-CN","icon":"pen-to-square","date":"2023-12-12T00:00:00.000Z","isOriginal":true,"category":["C#"],"tag":["foundation","基础"],"description":"刘铁锰老师课程 开闭原则 在面向对象编程领域中，开闭原则 (The Open/Closed Principle, OCP) 规定“软件中的对象（类，模块，函数等等）应该对于扩展是开放的，但是对于修改是封闭的”，这意味着一个实体是允许在不改变它的源代码的前提下变更它的行为。该特性在产品化的环境中是特别有价值的，在这种环境中，改变源代码需要代码审查，单元测试以及诸如此类的用以确保产品使用品质的过程。遵循这种原则的代码在扩展时并不发生改变，因此无需上述的过程。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/posts/C_/%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"开闭原则"}],["meta",{"property":"og:description","content":"刘铁锰老师课程 开闭原则 在面向对象编程领域中，开闭原则 (The Open/Closed Principle, OCP) 规定“软件中的对象（类，模块，函数等等）应该对于扩展是开放的，但是对于修改是封闭的”，这意味着一个实体是允许在不改变它的源代码的前提下变更它的行为。该特性在产品化的环境中是特别有价值的，在这种环境中，改变源代码需要代码审查，单元测试以及诸如此类的用以确保产品使用品质的过程。遵循这种原则的代码在扩展时并不发生改变，因此无需上述的过程。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-20T17:09:43.000Z"}],["meta",{"property":"article:author","content":"Mr.SpaceTime"}],["meta",{"property":"article:tag","content":"foundation"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2023-12-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-20T17:09:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开闭原则\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-20T17:09:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.SpaceTime\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1703092183000,"updatedTime":1703092183000,"contributors":[{"name":"时空","email":"Space_Time_@outlook.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"zh/posts/C#/抽象类&开闭原则.md","localizedDate":"2023年12月12日","excerpt":"<ul>\\n<li><a href=\\"https://www.bilibili.com/video/BV13b411b7Ht?p=27&amp;vd_source=5150c9e6d7cfe2c4040a21750bdbc79b\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">刘铁锰老师课程</a></li>\\n</ul>\\n<h1> 开闭原则</h1>\\n<ul>\\n<li>在面向对象编程领域中，开闭原则 (The Open/Closed Principle, OCP) 规定“软件中的对象（类，模块，函数等等）应该对于扩展是开放的，但是对于修改是封闭的”，这意味着一个实体是允许在不改变它的源代码的前提下变更它的行为。该特性在产品化的环境中是特别有价值的，在这种环境中，改变源代码需要代码审查，单元测试以及诸如此类的用以确保产品使用品质的过程。遵循这种原则的代码在扩展时并不发生改变，因此无需上述的过程。</li>\\n</ul>","copyright":{"author":"Mr.SpaceTime"},"autoDesc":true}');export{e as data};
