import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as u,a as t,b as o,d as n,f as r}from"./app-1ed2bf0c.js";const s="/assets/wpf/LayoutPanel.png",d="/assets/wpf/stackpanel.png",c="/assets/wpf/grid.png",q={},m=t("h1",{id:"wpf-布局面板-常用控件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#wpf-布局面板-常用控件","aria-hidden":"true"},"#"),o(" WPF 布局面板/常用控件")],-1),g={href:"https://www.cnblogs.com/zh7791/p/9012880.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/zh7791/p/9012880.html",target:"_blank",rel:"noopener noreferrer"},p={href:"https://www.cnblogs.com/zh7791/p/9014957.html",target:"_blank",rel:"noopener noreferrer"},v=r('<h2 id="布局面板" tabindex="-1"><a class="header-anchor" href="#布局面板" aria-hidden="true">#</a> 布局面板</h2><blockquote><ul><li>常见的几个布局面板 <img src="'+s+`" alt="布局面板" loading="lazy"></li></ul></blockquote><h3 id="_1-stackpanel" tabindex="-1"><a class="header-anchor" href="#_1-stackpanel" aria-hidden="true">#</a> 1. StackPanel</h3><ul><li><p>StackPanel面板能够简单根据单行或者单列进行元素排列, StackPanel 默认的布局方向为垂直方向(Vertical), 由Orientation属性控制。</p></li><li><p>Orientation属性：</p></li><li><p>用户控制布局方向是垂直还是横向排列。分别有两个值可选：Vertical、Horizontal</p><div class="language-xaml line-numbers-mode" data-ext="xaml"><pre class="language-xaml"><code>&lt;StackPanel Grid.Column =&quot;0&quot; Grid.Row=&quot;0&quot; Orientation=&quot;Horizontal&quot;&lt;!-- 通过增加此项来更改水平或垂直堆叠 --&gt; &gt;
  &lt;Button Height=&quot;20&quot; Content=&quot;1&quot;/&gt;
  &lt;Button Height=&quot;20&quot; Content=&quot;2&quot;/&gt;
  &lt;Button Height=&quot;20&quot; Content=&quot;3&quot;/&gt;
  &lt;Button Height=&quot;20&quot; Content=&quot;4&quot;/&gt;
&lt;/StackPanel&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>横向/纵向堆叠<br><img src="`+d+`" alt="StackPanel" loading="lazy"></p></li></ul><h3 id="_2-grid" tabindex="-1"><a class="header-anchor" href="#_2-grid" aria-hidden="true">#</a> 2. Grid</h3><div class="language-xaml line-numbers-mode" data-ext="xaml"><pre class="language-xaml"><code>  &lt;TextBlock Text=&quot;用户名&quot; Grid.Row=&quot;0&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Center&quot;/&gt;
  &lt;local:CustomTextBox TextBoxCornerRadius=&quot;10&quot; Text=&quot;{Binding Account}&quot; x:Name=&quot;txtAccont&quot;  Grid.Row=&quot;0&quot; Grid.Column=&quot;1&quot; Width=&quot;200&quot; Margin=&quot;2&quot;/&gt;
  &lt;TextBlock Text=&quot;密码&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;0&quot; VerticalAlignment=&quot;Center&quot;/&gt;
  &lt;local:CustomTextBox TextBoxCornerRadius=&quot;10&quot; Text=&quot;{Binding Password }&quot;  
                      x:Name=&quot;txtPassword&quot;  Grid.Row=&quot;1&quot; Grid.Column=&quot;1&quot;  Margin=&quot;2&quot;/&gt;
  &lt;PasswordBox local:PasswordHelper.Pwd=&quot;{Binding Password ,Mode=TwoWay}&quot; local:PasswordHelper.IsEnablePasswordPropertyChanged=&quot;True&quot;
              x:Name=&quot;Password&quot;  Grid.Row=&quot;1&quot;  Margin=&quot;-235,2,71,2&quot;/&gt;
  &lt;CheckBox Grid.Row=&quot;2&quot; Content=&quot;记住密码&quot; Grid.ColumnSpan =&quot;2&quot; /&gt;
  &lt;local:CustomButton ButtonCornerRadius=&quot;10&quot; Foreground=&quot;#FFFFFF&quot; Grid.Row=&quot;03&quot; Grid.Column=&quot;1&quot; Content=&quot;登录&quot; Grid.ColumnSpan =&quot;2&quot; 
                      Command=&quot;{Binding LoginAction}&quot; BackgroundHover=&quot;Yellow&quot; BackgroundPressed=&quot;YellowGreen&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>表格形式 <img src="`+c+'" alt="Alt text" loading="lazy"></li></ul>',7);function x(_,b){const e=a("ExternalLinkIcon");return i(),u("div",null,[m,t("ul",null,[t("li",null,[t("strong",null,[o("此笔记摘抄自 "),t("a",g,[o("痕迹 前辈的笔记 ,建议直接看前辈的笔记"),n(e)])])]),t("li",null,[t("a",h,[o("布局面板"),n(e)])]),t("li",null,[t("a",p,[o("常用控件"),n(e)])])]),v])}const f=l(q,[["render",x],["__file","1.html.vue"]]);export{f as default};
